     1                                  	segment	.data
     2 00000000 AF00000000000000        a	dq	175
     3 00000008 0110000000000000        b	dq	4097
     4 00000010 AF000000                c	dd	175
     5 00000014 01100000                d	dd	4097
     6                                  
     7                                  	segment .bss
     8 00000000 <res 00000008>          res	resq	1
     9                                  
    10                                  	segment	.text
    11                                  	global	_start
    12                                  
    13                                  _start:
    14 00000000 48B8-                   	mov	rax, a		;mov address of a into rax
    14 00000002 [0000000000000000] 
    15 0000000A 488B0425[00000000]      	mov	rax, [a]	;mov a (175) int rax
    16 00000012 48030425[08000000]      	add 	rax, [b]	;add b to rax
    17 0000001A 4831C0                  	xor	rax, rax	;rax = 0
    18                                  
    19                                  _double:
    20 0000001D 48B8-                   	mov	rax, c		; mov address of c into rax
    20 0000001F [1000000000000000] 
    21 00000027 8B0425[10000000]        	mov	eax, [c]	; mov c (175) into rax
    22 0000002E 030425[14000000]        	add	eax, [d]	; add d to rax
    23 00000035 48890425[00000000]      	mov	[res], rax	; store rax to res
    24 0000003D 4831C0                  	xor	rax, rax	; rax = 0;
    25                                  
    26                                  _quit:
    27 00000040 B801000000              	mov	eax, 1		; exit
    28 00000045 31DB                    	xor 	ebx, ebx	; 0 = exit code
    29 00000047 CD80                    	int	0x80		; call kernel
